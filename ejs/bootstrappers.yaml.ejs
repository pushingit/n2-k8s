apiVersion: v1
kind: List
items:
  # enable bootstrapping nodes to create CSR
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: create-csrs-for-bootstrapping
    subjects:
    - kind: Group
      name: system:bootstrappers
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: system:node-bootstrapper
      apiGroup: rbac.authorization.k8s.io
  # Approve all CSRs for the group "system:bootstrappers"
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: auto-approve-csrs-for-group
    subjects:
    - kind: Group
      name: system:bootstrappers
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
      apiGroup: rbac.authorization.k8s.io
# Approve renewal CSRs for the group "system:nodes"
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: auto-approve-renewals-for-nodes
    subjects:
    - kind: Group
      name: system:nodes
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
      apiGroup: rbac.authorization.k8s.io
# for below see https://github.com/kubernetes/kubeadm/issues/1285#issuecomment-442738078
# will be merged into k8s (not sure about service account)
# allow controller-manager to do SubjectAccessReview
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: controller-manager:system:auth-delegator
    subjects:
    - kind: User
      name: system:kube-controller-manager
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: system:auth-delegator
      apiGroup: rbac.authorization.k8s.io
# allow controller manager to read kube-system/extension-apiserver-authentication
  - kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: controller-manager:extension-apiserver-authentication-reader
      namespace: kube-system
    subjects:
    - kind: User
      name: system:kube-controller-manager
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: Role
      name: extension-apiserver-authentication-reader
      apiGroup: rbac.authorization.k8s.io
# allow service account to read kube-system/extension-apiserver-authentication
  - kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: service-account:extension-apiserver-authentication-reader
      namespace: kube-system
    subjects:
    - kind: ServiceAccount
      name: service-account
      apiGroup: ""
    roleRef:
      kind: Role
      name: extension-apiserver-authentication-reader
      apiGroup: rbac.authorization.k8s.io
